---

version: '3.9'

services:
  rabbitmq:
    image: wayofdev/rabbitmq:management-alpine-latest
    container_name: ${COMPOSE_PROJECT_NAME_SAFE}_rabbitmq
    restart: on-failure
    networks:
      default:
        aliases:
          - rabbitmq.${COMPOSE_PROJECT_NAME}.alias
      shared:
        aliases:
          - rabbitmq.${COMPOSE_PROJECT_NAME}.alias
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER:-admin}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS:-admin}
    volumes:
      - "rabbitmq_data:/var/lib/rabbitmq"
    labels:
      - traefik.enable=true
      - traefik.http.routers.rabbitmq-${COMPOSE_PROJECT_NAME_SLUG}.rule=Host(`rabbitmq.${COMPOSE_PROJECT_NAME}.docker`)
      - traefik.http.routers.rabbitmq-${COMPOSE_PROJECT_NAME_SLUG}.entrypoints=websecure
      - traefik.http.routers.rabbitmq-${COMPOSE_PROJECT_NAME_SLUG}.tls=true
      - traefik.http.services.rabbitmq-${COMPOSE_PROJECT_NAME_SLUG}.loadbalancer.server.port=15672
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3

  mailhog:
    image: jcalonso/mailhog:latest
    container_name: ${COMPOSE_PROJECT_NAME_SAFE}_mailhog
    restart: on-failure
    ports:
      - '${FORWARD_MAILHOG_PORT:-1025}:1025'
    networks:
      default:
      shared:
        aliases:
          - mailhog.${COMPOSE_PROJECT_NAME}.alias
    labels:
      - traefik.enable=true
      - traefik.http.routers.mail-${COMPOSE_PROJECT_NAME_SLUG}.rule=Host(`mail.${COMPOSE_PROJECT_NAME}.docker`)
      - traefik.http.routers.mail-${COMPOSE_PROJECT_NAME_SLUG}.entrypoints=websecure
      - traefik.http.routers.mail-${COMPOSE_PROJECT_NAME_SLUG}.tls=true
      - traefik.http.services.mail-${COMPOSE_PROJECT_NAME_SLUG}.loadbalancer.server.port=8025

  keycloak-database:
    image: postgres:16-alpine
    container_name: ${COMPOSE_PROJECT_NAME_SAFE}_keycloak_db
    restart: on-failure
    volumes:
      - keycloak_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${KC_DB_URL_DATABASE}
      POSTGRES_USER: ${KC_DB_USERNAME}
      POSTGRES_PASSWORD: ${KC_DB_PASSWORD}
    ports:
      - "5432"

  keycloak:
    image: quay.io/keycloak/keycloak:23.0.3
    container_name: ${COMPOSE_PROJECT_NAME_SAFE}_keycloak
    restart: on-failure
    volumes:
      - ./keycloak/themes/keywind.jar:/opt/keycloak/providers/keywind.jar
      - ./keycloak/certs/cert.pem:/opt/keycloak/conf/cert.pem
      - ./keycloak/certs/key.pem:/opt/keycloak/conf/key.pem
      - ./keycloak/setup:/tmp/setup:ro
    networks:
      default:
        aliases:
          - keycloak.${COMPOSE_PROJECT_NAME}.alias
      shared:
        aliases:
          - keycloak.${COMPOSE_PROJECT_NAME}.alias
    depends_on:
      - keycloak-database
    env_file:
      - .env
    environment:
      KC_FEATURES_DISABLED: "jdbc-h2,jdbc-mariadb,jdbc-mssql,jdbc-mysql,jdbc-oracle"
    ports:
      - "8765:8080"
    links:
      - keycloak-database
    labels:
      - traefik.enable=true
      - traefik.http.routers.keycloak-${COMPOSE_PROJECT_NAME_SLUG}.rule=Host(`auth.${COMPOSE_PROJECT_NAME}.docker`)
      - traefik.http.routers.keycloak-${COMPOSE_PROJECT_NAME_SLUG}.entrypoints=websecure
      - traefik.http.routers.keycloak-${COMPOSE_PROJECT_NAME_SLUG}.tls=true
      - traefik.http.services.keycloak-${COMPOSE_PROJECT_NAME_SLUG}.loadbalancer.server.port=${KC_HTTP_PORT}
    entrypoint: ["/opt/keycloak/bin/kc.sh", "start-dev"]

volumes:
  rabbitmq_data:
  keycloak_data:

networks:
  default:
    name: project.${COMPOSE_PROJECT_NAME_SAFE}
  shared:
    external: true
    name: ${SHARED_SERVICES_NETWORK}

...
